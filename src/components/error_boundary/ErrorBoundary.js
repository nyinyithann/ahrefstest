// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from 'react';
import * as Js_exn from 'rescript/lib/es6/js_exn.js';
import * as RescriptReactRouter from '@rescript/react/src/RescriptReactRouter.js';
import ErrorBoundaryModuleCss from './ErrorBoundary.module.css';
import * as RescriptReactErrorBoundary from '@rescript/react/src/RescriptReactErrorBoundary.js';

var styles = ErrorBoundaryModuleCss;

function ErrorBoundary$Fallback(Props) {
  var error = Props.error;
  var info = Props.info;
  var onClick = function (param) {
    RescriptReactRouter.push('/');
    window.location.reload();
  };
  var tmp;
  if (error.RE_EXN_ID === Js_exn.$$Error) {
    var msg = error._1.message;
    tmp = msg !== undefined ? React.createElement('p', undefined, msg) : null;
  } else {
    tmp = null;
  }
  return React.createElement(
    'div',
    {
      className: styles.main,
    },
    React.createElement(
      'article',
      {
        className: styles.article,
      },
      React.createElement(
        'header',
        undefined,
        React.createElement('h2', undefined, 'Sorry, something went wrong!')
      ),
      React.createElement(
        'nav',
        undefined,
        React.createElement(
          'p',
          undefined,
          'Would you try to reload the whole site?'
        ),
        React.createElement(
          'button',
          {
            type: 'button',
            onClick: onClick,
          },
          'Reload'
        )
      ),
      React.createElement(
        'details',
        undefined,
        React.createElement('summary', undefined, 'Details'),
        tmp,
        React.createElement('p', undefined, '' + info.componentStack + '')
      )
    )
  );
}

var Fallback = {
  make: ErrorBoundary$Fallback,
};

function ErrorBoundary(Props) {
  var children = Props.children;
  return React.createElement(RescriptReactErrorBoundary.make, {
    children: children,
    fallback: function (param) {
      return React.createElement(ErrorBoundary$Fallback, {
        error: param.error,
        info: param.info,
      });
    },
  });
}

var make = ErrorBoundary;

export { styles, Fallback, make };
/* styles Not a pure module */
